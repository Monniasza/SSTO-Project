//LPG AutoGenerator
//39% LPG by volume
//61% Oxidizer by volume
//195u LPG / 61u Ox
//Density of fuel : 805 g/l
//Density of tank: 10 g/l

//Add ModuleLPG to inhibit creation of LPG version

//5x + y = 256
// x + y = 100
//4x     = 156

+PART[*]:HAS[!MODULE[ModuleLPG]]:FINAL{
	%fmr = 8
	%SSTOLPG = 1.06
	%eligible = false
	%hasLF = false
	%hasOX = false
	%hasRockets = false
	%hasJets = false
	%LFO = 0
	%mfsFT = false
	
	%oldName = #$name$
	@name = #$name$_LPGA
	MODULE{
		name = ModuleLPGAutogen
	}
}

//SMURFF fuel ratio
@PART[*_LPGA]:NEEDS[SMURFF]:FINAL{
	@fmr *= #$@SMURFFCONFIG/lfofactor$
}

//Count fuels
@PART[*_LPGA]:HAS[@RESOURCE[LiquidFuel],!MODULE[ModuleFuelTanks]]:FINAL{
	@eligible = true
	@LFO += #$RESOURCE[LiquidFuel]/maxAmount$
	@hasLF = true
}
@PART[*_LPGA]:HAS[@RESOURCE[Oxidizer],!MODULE[ModuleFuelTanks]]:FINAL{
	@LFO += #$RESOURCE[LiquidFuel]/maxAmount$
	@hasOX = true
}

//Modular Fuel Tanks
@PART[*_LPGA]:HAS[@MODULE[ModuleFuelTanks]:HAS[#type[Default]|#type[Structural]|#type[ServiceModule]|#type[Balloon]]]:FINAL{
	@eligible = true
	@mfsFT = true
	@LFO = #$MODULE[ModuleFuelTanks]/volume$
	@hasLF = true
	@hasOX = true
}
@PART[*_LPGA]:HAS[@MODULE[ModuleFuelTanks]:HAS[#type[Fuselage]]]:FINAL{
	@eligible = true
	@mfsFT = true
	@LFO = #$MODULE[ModuleFuelTanks]/volume$
	@hasLF = true
	@hasOX = false
}

//Special Isp values for mods with lower Isps
@PART[bluedog_*_LPGA]:FINAL{ //Increased LPG improvement - BDB engines have inferior Isp, so increase by 22%
	@SSTOLPG = 1.22
}
@PART[BAEengine*_LPGA]:FINAL{ //Increased LPG improvement - BAE engines have inferior Isp, so increase by 15%
	@SSTOLPG = 1.15
}

//Autogenerate engines
@PART[*_LPGA]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[Oxidizer]]]:FINAL{ //Rockets and arcjets
	@hasRockets = true
	@eligible = true
	@MODULE[ModuleEngines*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[Oxidizer]]{
		@PROPELLANT[LiquidFuel]{
			@name = LPG
			@ratio = 1,5234375
		}
		@PROPELLANT[Oxidizer]{
			@ratio = 0,4765625
		}
		@atmosphereCurve
    {
      k0 = #$key,0[1, ]$
      @k0 *= #$../../SSTOLPG$
      @key,0 = #0 $k0$
      
      k1 = #$key,1[1, ]$
      @k1 *= #$../../SSTOLPG$
      @key,1 = #1 $k1$
    }
	}
}
@PART[*_LPGA]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[IntakeAir]]]:FINAL{ //Jets
	@hasJets = true
	@eligible = true
	@MODULE[ModuleEngines*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[IntakeAir]]{  //Jets
	//3.5:1 mass OX/LPG
	@PROPELLANT[LiquidFuel]{
		@name = LPG
		@ratio *= 5
	}
	
    @atmosphereCurve
    {
      k0 = #$key,0[1, ]$
      @k0 *= 1.2
      @key,0 = #0 $k0$
    }
  }
}

//Calculate mass
!PART[*_LPGA]:HAS[#eligible[false]]:FINAL{}

@PART[*_LPGA]:FINAL{
	@title = #$title$ (LPG)
}
@PART[*_LPGA]:HAS[#hasLF[true]]:FINAL{
	%massTank = #$LFO$
	@massTank /= 5
	@massTank /= #$fmr$
	%massRemain = #$mass$
	@massRemain -= #$massTank$
	@mass -= #$massTank$
	%massTankNew = #$LFO$
	@massTankNew /= 5
	@massTankNew /= 100
	@mass += #$massTankNew$
}
@PART[*_LPGA]:HAS[#hasLF[true]&#hasOX[false]]:NEEDS[ModularFuelTanks]:FINAL{
	-MODULE[ModuleFuelTanks],* {}
	-RESOURCE[LiquidFuel] {}
	-RESOURCE[Oxidizer] {}
	MODULE{
		name = ModuleFuelTanks
		type = LPG
		volume = #$../LFO$
	}
}
@PART[*_LPGA]:HAS[#hasLF[true]&#hasOX[true]]:NEEDS[ModularFuelTanks]:FINAL{
	-MODULE[ModuleFuelTanks],* {}
	-RESOURCE[LiquidFuel] {}
	-RESOURCE[Oxidizer] {}
	MODULE{
		name = ModuleFuelTanks
		type = LPGox
		volume = #$../LFO$
	}
}

@PART[*_LPGA]:HAS[#hasLF[true]&#hasOX[false]]:NEEDS[!ModularFuelTanks]:FINAL{
	-MODULE[ModuleFuelTanks],* {}
	-RESOURCE[LiquidFuel] {}
	-RESOURCE[Oxidizer] {}
	RESOURCE{
		name = LPG
		%amount = #$../LFO$
		@amount *= 5
		%maxAmount = amount
	}
}
@PART[*_LPGA]:HAS[#hasLF[true]&#hasOX[true]]:NEEDS[!ModularFuelTanks]:FINAL{
	-MODULE[ModuleFuelTanks],* {}
	-RESOURCE[LiquidFuel] {}
	-RESOURCE[Oxidizer] {}
	RESOURCE{
		name = LPG
		%amount = #$../LFO$
		@amount *= 1.95
		%maxAmount = amount
	}
	RESOURCE{
		name = Oxidizer
		%amount = #$../LFO$
		@amount *= 0.61
		%maxAmount = amount
	}
	
}


