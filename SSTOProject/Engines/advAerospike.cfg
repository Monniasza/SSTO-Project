PART
{
	name = advAerospike
	module = Part
	author = Porkjet
	rescaleFactor = 1
	node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0
	node_stack_bottom = 0.0, -0.9, 0.0, 0.0, -1.0, 0.0
	fx_exhaustFlame_blue = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, running
	fx_smokeTrail_light = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustSparks_flameout = 0.0, -0.0, 0.0, 0.0, 1.0, 0.0, flameout
	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout
	mass = 1.0
	//heatConductivity = 0.03
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 20
	maxTemp = 2000 // = 3600
	TechRequired = aerospaceTech
	entryCost = 24500
	cost = 10000
	category = Engine
	subcategory = 0
	title = Advanced Aerospike Jet Engine
	manufacturer = #autoLOC_501624 //#autoLOC_501624 = C7 Aerospace Division
	description = This engine is suited for best spacecraft that can be found, reaching orbital velocity with only jets and most efficient aerospike combustion.
	attachRules = 1,1,1,0,0
	bulkheadProfiles = srf, size1
	tags = (dart orbit propuls rocket sustain jet
	MODEL
	{
		model = Squad/Parts/Engine/liquidEngineAerospike/AeroSpike
	}
	
	MODULE //engine modes
	{
		name = MultiModeEngine
		primaryEngineID = AirBreathing
		primaryEngineModeDisplayName = #autoLOC_6001897 //#autoLOC_6001897 = AirBreathing
		secondaryEngineID = ClosedCycle
		secondaryEngineModeDisplayName = #autoLOC_6001898 //#autoLOC_6001898 = ClosedCycle
	}	
	MODULE //ground effect jet
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 1
		fxMax = 0.5
		maxDistance = 20
		falloff = 2
		thrustTransformName = thrustTransform
	}
	MODULE //ground effect rocket
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 2
		fxMax = 0.6
		maxDistance = 30
		falloff = 1.6
		thrustTransformName = thrustTransform
	}
	MODULE //jet
	{
		atmChangeFlow = True
		useVelCurve = True
		useAtmCurve = True
		name = ModuleEngines
		engineID = AirBreathing
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 180
		heatProduction = 110
		fxOffset = 0, 0, 0
		EngineType = LiquidFuel
		exhaustDamageDistanceOffset = 0.25
		engineAccelerationSpeed = 0.2
		engineDecelerationSpeed = 0.35
		PROPELLANT{ //air
			name = IntakeAir
			ignoreForIsp = True
			ratio = 3
		}
		PROPELLANT{ //LF
			name = LiquidFuel
			resourceFlowMode = STAGE_STACK_FLOW_BALANCE
			ratio = 1
			DrawGauge = True
		}
		atmosphereCurve{
			key = 0 3600
		}
		velCurve{
			key = 0 1
			key = 2 4
			key = 4 8
			key = 6 6
			key = 7 1
			key = 8 0
		}
		atmCurve{
			// higher thrust at altitude than even TRJ
			key = 0 0
			key = 0.006 0
			key = 0.008 0.1
			key = 0.018 0.3
			key = 0.08 0.5
			key = 0.35 0.7
			key = 1 1
		}
	}
	MODULE //rocket
	{
		name = ModuleEngines
		engineID = ClosedCycle
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 120
		heatProduction = 110
		fxOffset = 0, 0, 0
		EngineType = LiquidFuel
		exhaustDamageDistanceOffset = 0.25
		PROPELLANT{ //LF
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT{ //O
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve{
			key = 0 380 -50 -73.71224
			key = 1 360 -21.23404 -21.23404
			key = 5 300 -10.54119 -10.54119
			key = 10 200 -13.59091 -13.59091
			key = 20 0.001
		}
	}
	//MODULE
	//{
	//	name = ModuleAnimateHeat
	//	ThermalAnim = Aerospike_Heat
	//	useTemp = true		// Do we use the original temperature-based lerp, or do we let another module set us?
	//	useSkinTemp = false	// If useTemp is true, do we use Skin or Internal temp?
	//}
	MODULE //heat effects
	{
		name = FXModuleAnimateThrottle
		animationName = Aerospike_Heat
		responseSpeed = 0.001
		dependOnEngineState = True
		dependOnThrottle = True
	}
	MODULE //alternator
	{
		name = ModuleAlternator
		RESOURCE
		{
			name = ElectricCharge
			rate = 5.0
		}
	}
	MODULE //shroud
	{
		name = ModuleJettison
		jettisonName = Fairing
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.1
		jettisonForce = 5
		jettisonDirection = 0 0 1
	}
	MODULE //contract test subject
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
