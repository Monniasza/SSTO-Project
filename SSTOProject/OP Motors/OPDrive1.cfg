PART{
	name = OPDrive1
	module = Part
	author = RoverDude
	MODEL
	{
		model = SquadExpansion/Serenity/Parts/Robotics/Assets/rotor_01s
	}

	NODE
	{
		name = N2_1
		transform = N2_1
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N2_2
		transform = N2_2
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N3_1
		transform = N3_1
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N3_2
		transform = N3_2
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N3_3
		transform = N3_3
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N4_1
		transform = N4_1
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N4_2
		transform = N4_2
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N4_3
		transform = N4_3
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N4_4
		transform = N4_4
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N6_1
		transform = N6_1
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N6_2
		transform = N6_2
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N6_3
		transform = N6_3
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N6_4
		transform = N6_4
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N6_5
		transform = N6_5
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N6_6
		transform = N6_6
		size=0
		method=FIXED_JOINT		
	}

	NODE
	{
		name = N8_1
		transform = N8_1
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_2
		transform = N8_2
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_3
		transform = N8_3
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_4
		transform = N8_4
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_5
		transform = N8_5
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_6
		transform =N8_6
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_7
		transform = N8_7
		size=0
		method=FIXED_JOINT		
	}
	NODE
	{
		name = N8_8
		transform = N8_8
		size=0
		method=FIXED_JOINT		
	}

	MODULE
	{
		name = ModuleDynamicNodes
		autostrut = true
		NODE_SET
		{
			DisplayText = #autoLOC_8004446	// #autoLOC_8004446 = Double
			NodePrefix = N2_
			SetCount = 2
			Symmetry = 1
		}

		NODE_SET
		{
			DisplayText = #autoLOC_8004447	// #autoLOC_8004447 = Triple
			NodePrefix = N3_
			SetCount = 3
			Symmetry = 2
		}

		NODE_SET
		{
			DisplayText = #autoLOC_8004448	// #autoLOC_8004448 = Quad
			NodePrefix = N4_
			SetCount = 4
			Symmetry = 3
		}

		NODE_SET
		{
			DisplayText = #autoLOC_8004449	// #autoLOC_8004449 = Hex
			NodePrefix = N6_
			SetCount = 6
			Symmetry = 5
		}
		NODE_SET
		{
			DisplayText = #autoLOC_8004450	// #autoLOC_8004450 = Octo
			NodePrefix = N8_
			SetCount = 8
			Symmetry = 7
		}
	}


	rescaleFactor = 1
	node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0
	node_stack_top = 0.0, 0.343347, 0.0, 0.0, 1.0, 0.0, 0
	node_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0
	TechRequired = fieldScience
	entryCost = 14000
	cost = 600
	category = Robotics
	subcategory = 0
	title = Small Supercoducting Cryogenic Engine
	manufacturer = #autoLOC_501649		//#autoLOC_501649 = Kerbal Motion LLC
	description = Small overpowered rotor engine
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0
	mass = 0.018
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 12
	breakingForce = 2000
	breakingTorque = 2000
	maxTemp = 2400 // = 5000
	bulkheadProfiles = size0
	tags = #autoLOC_8320037 //#autoLOC_8320037 = robot actuator motor

	MODULE
	{
		name = ModuleRoboticServoRotor
		servoTransformName = TopJoint
		servoAttachNodes = top,N2_1,N2_2,N3_1,N3_2,N3_3,N4_1,N4_2,N4_3,N4_4,N6_1,N6_2,N6_3,N6_4,N6_5,N6_6,N8_1,N8_2,N8_3,N8_4,N8_5,N8_6,N8_7,N8_8
		servoSrfMeshNames = COL1
		rotationMatch = 0.009
		maxMotorOutput = 2000
		mainAxis = Y
        traverseVelocityLimits = 0, 4600
		motorizedMassPerKN = 0.00002
		motorizedCostPerDriveUnit = 0.6
		brakeTorque = 600
		rpmLimit = 4600
		rotorSpoolTime = 150
		rotorTorqueCurve = 1
		efficiency = 0.8
		baseResourceConsumptionRate = 0.06
		referenceConsumptionVelocity = 460
		// if RESOURCE is used, negative power is simply dumped
		RESOURCE
		{
			name = ElectricCharge
			rate = 1
		}
		// INPUT_RESOURCE is by default equivalent to RESOURCE
		//INPUT_RESOURCE
		//{
		//	name = ElectricCharge
		//	rate = 1
		//}
		//OUTPUT_RESOURCE is required to reclaim energy from negative power
		//OUTPUT_RESOURCE
		//{
		//	name = ElectricCharge
		//	rate = 1
		//}
		angularPositionSpring = 0.0000000001
		angularPositionDamper = 1000
	}
	MODULE
	{
		name = ModulePartVariants
		primaryColor = #999999
		secondaryColor = #4b7c9a
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes
		useMultipleDragCubes = false
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999
			TEXTURE
			{
				mainTextureURL = SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
			}
		}
	}
	MODULE
	{
		name = ModuleResourceAutoShiftState
		affectedResourceName = ElectricCharge
		affectedModuleName = ModuleRoboticServoRotor
		resourceShutOffHandler = true
		resourceStartUpHandler = true
		resourceShutOffStartUpUsePercent = true
		resourceShutOffAmount = 0
		resourceShutOffPercent = 0
		resourceStartUpAmount = 0
		resourceStartUpPercent = 5
	}
}
!PART[OPDrive1]:NEEDS[!SquadExpansion]